---
- name: "[IntermediateCA] | Generate CA Intermediate Private key"
  openssl_privatekey: 
    path: "{{ ca_intermediate_dir }}/private/{{ ca_intermediate_file_name }}.key"

- name: "[IntermediateCA] | Generate CSR"
  openssl_csr:
   path: "{{ ca_intermediate_dir }}/csr/{{ ca_intermediate_file_name }}.csr"
   privatekey_path: "{{ ca_intermediate_dir }}/private/{{ ca_intermediate_file_name }}.key"
   country_name: "{{ ca_subject_country }}"
   state_or_province_name: "{{ ca_subject_state_province }}"
   locality_name: "{{ ca_locality_name | default(omit) }}"
   organization_name: "{{ ca_organization_name }}"
   organizational_unit_name: "{{ ca_organizational_unit_name }}"
   common_name: "{{ ca_intermediate_common_name }}"
   email_address: "{{ ca_intermediate_email | default(omit) }}"
   basic_constraints_critical: "{{ ca_intermediate_basic_constraints_critical | default('True') }}"
   basic_constraints: "{{ ca_intermediate_basic_constraints }}"
   use_common_name_for_san: "{{ ca_intermediate_use_common_name_for_san }}"
   key_usage_critical: "{{ ca_intermediate_key_usage_critical | default('True') }}"
   key_usage: "{{ ca_intermediate_key_usage }}"

- name: "[IntermediateCA] | Generate an Intermediate from a self-signed certificate"
  openssl_certificate:
   csr_path: "{{ ca_intermediate_dir }}/csr/{{ ca_intermediate_file_name }}.csr"
   path: "{{ ca_intermediate_dir }}/certs/{{ ca_intermediate_file_name }}.pem"
   privatekey_path: "{{ ca_intermediate_dir }}/private/{{ ca_intermediate_file_name }}.key"
   provider: ownca
   ownca_create_subject_key_identifier: always_create
   ownca_path: "{{ ca_root_dir }}/certs/{{ ca_root_file_name }}-cert-self-signed.pem"
   ownca_privatekey_path: "{{ ca_root_dir }}/private/{{ ca_root_file_name }}.key"

- name: "[IntermediateCA] | Find root certificate"
  certificate_complete_chain:
    input_chain: "{{ lookup('file', '{{ ca_intermediate_dir }}/certs/{{ ca_intermediate_file_name }}.pem') }}"
    root_certificates:
    - "{{ ca_root_dir }}/certs/"
  register: chaincert

- name: "[IntermediateCA] | Write complete chain to disk"
  copy:
    dest: "{{ ca_intermediate_dir }}/certs/complete_chain.pem"
    content: "{{ ''.join(chaincert.complete_chain) }}"
